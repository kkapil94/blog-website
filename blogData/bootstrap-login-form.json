{
    "title":"How to Create Bootstrap Login Form with PHP Validation",
    "description":"Login page can be designed via simple HTML. However, for the sake of this article, I shall use twitter bootstrap which is an open source CSS and JavaScript library. The reasons why I am using bootstrap are straight forward. Firstly, I want to improve the look and feel of my webpage and bootstrap let me do that with only a few lines of code. Secondly, I want my login page to be responsive. Again bootstrap contains classes that help create responsive layouts out of the box. Take a look at the the following code snippet.  The name of this webpage is “index.php“.Let’s start from the header section. It contains some meta information and links to bootstrap style sheet and the custom style sheet i.e. style.css. The body section contains a div with class “container.” This is a bootstrap class. It adds left and right padding and it also centers the div.Inside the div, a form with class “form-signin’ has been created. This ‘form-signin’ is ain a bootstrap class used to style a form. The form has two input elements: one of type text and the other of type password. Both of these elements are required. You cannot leave them empty. Here I have intentionally set the type of email element to text because here If I set it to email, bootstrap will implement its own email validation. However, I want to show you how PHP implements email validations.In the style.css, I have modified the “container” class by setting its max-width property to 600px. I have also added a random background image to the body tag. The contents of “style.css” are as follows:",
    "img":"https://myprogrammingblog.com/wp-content/uploads/2016/10/create_form_background_screenshot-1024x495.jpg",
    "author":"kapil khatri",
    "slug":"bootstrap-login-form"
}